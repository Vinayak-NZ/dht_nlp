app_v1_sentiment <- read.csv("input/app_v1_sentiment_count_df.csv")
app_v2_sentiment <- read.csv("input/app_v2_sentiment_count_df.csv")
View(app_v1_sentiment)
View(app_v2_sentiment)
app_all_sentiment <- merge(app_v1_sentiment, app_v2_sentiment, by = "sentiment")
View(app_all_sentiment)
app_v1_sentiment$version == "one"
app_v2_sentiment$version == "two"
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
View(app_v1_sentiment)
app_v1_sentiment$version <- "one"
app_v1_sentiment$version <- 1
app_v1_sentiment$version == 1
app_v1_sentiment[["version"]] == 1
app_v1_sentiment$version <- rep(1, nrow(app_v1_sentiment))
rep(1, nrow(app_v1_sentiment))
View(app_v1_sentiment)
View(app_v2_sentiment)
app_v2_sentiment$version == 2
app_v1_sentiment$version <- rep(1, nrow(app_v1_sentiment))
app_v2_sentiment$version <- rep(1, nrow(app_v2_sentiment))
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
View(app_all_sentiment)
app_v1_sentiment$version <- rep(1, nrow(app_v1_sentiment))
app_v2_sentiment$version <- rep(2, nrow(app_v2_sentiment))
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
View(app_all_sentiment)
app_v1_sentiment$proportion <- (app_v1_sentiment$count/sum(app_v1_sentiment$count))*100
View(app_v1_sentiment)
app_v2_sentiment$proportion <- (app_v2_sentiment$count/sum(app_v2_sentiment$count))*100
app_v1_sentiment$version <- rep(1, nrow(app_v1_sentiment))
app_v2_sentiment$version <- rep(2, nrow(app_v2_sentiment))
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity")
library(ggplot2)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity")
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
labs(title = paste0("Sentiment toward app"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
app_v1_sentiment$version <- rep("one", nrow(app_v1_sentiment))
app_v2_sentiment$version <- rep("two", nrow(app_v2_sentiment))
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
labs(title = paste0("Sentiment toward app"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2")) +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
app_all_sentiment$sentiment <- factor(app_all_sentiment$sentiment, levels = c('negative',
'neutral',
'positive'))
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2")) +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
app_all_sentiment$sentiment <- factor(app_all_sentiment$sentiment, levels = c('positive',
'neutral',
'negative'))
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2")) +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2"),
labels = c("Positive", "Neutral", "Negative")) +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2"),
labels = c("Positive", "Neutral", "Negative")) +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
) +
guides(color=guide_legend("Sentiment"))
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2"),
labels = c("Positive", "Neutral", "Negative"),
name = "Sentiment") +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
app_v1_sentiment$proportion <- (app_v1_sentiment$count/sum(app_v1_sentiment$count))*100
app_v2_sentiment$proportion <- (app_v2_sentiment$count/sum(app_v2_sentiment$count))*100
app_v1_sentiment$version <- rep("1.0", nrow(app_v1_sentiment))
app_v2_sentiment$version <- rep("2.0", nrow(app_v2_sentiment))
app_all_sentiment <- rbind(app_v1_sentiment, app_v2_sentiment)
app_all_sentiment$sentiment <- factor(app_all_sentiment$sentiment, levels = c('positive',
'neutral',
'negative'))
# Stacked
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2"),
labels = c("Positive", "Neutral", "Negative"),
name = "Sentiment") +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
ggplot(app_all_sentiment,
aes(fill=sentiment,
y=proportion,
x=version)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("negative" = "#e18b22",
"neutral" = "#46e7fd",
"positive" = "#4739a2"),
labels = c("Positive", "Neutral", "Negative"),
name = "Sentiment") +
labs(title = paste0("Sentiment toward digital health tool"),
subtitle = "Stacked barchart comparing versions one and two",
caption = "Data source: TeamBaby") +
xlab("Version") +
ylab("Proportion") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic")
)
View(app_all_sentiment)
?chisq.test
chisquare_input <- matrix(app_v1_sentiment$count,
app_v2_sentiment$count)
chisq.test(chisquare_input, correct = FALSE)
chisquare_input
chisquare_input <- matrix(app_v1_sentiment$count,
app_v2_sentiment$count,
nrow = 3,
ncol = 2)
View(chisquare_input)
View(app_v2_sentiment)
chisquare_input <- matrix(c(app_v1_sentiment$count,
app_v2_sentiment$count),
nrow = 3,
ncol = 2)
chisq.test(chisquare_input, correct = FALSE)
chi_square_stat <- chisq.test(chisquare_input, correct = FALSE)
View(app_all_sentiment)
library(data.table)
chi_square_table <- app_all_sentiment
setDT(chi_square_table)
View(app_all_sentiment)
chi_square_table <- app_all_sentiment[, c("version", "sentiment", "count")]
setDT(chi_square_table)
dcast(chi_square_table, version ~ sentiment, value.var = "count")
chi_square_table <- dcast(chi_square_table, version ~ sentiment, value.var = "count")
library(kableExtra)
chi_square_stat$statistic
chi_square_stat$parameter
chi_square_stat$parameter[1]
chi_square_stat$parameter[[1]]
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c("" = 1, "Sentiment" = 3)) %>%
footnote(general = paste0("χ2", "(", chi_square_stat$parameter[[1]], ")", " = ",
chi_square_stat$statistic[[1]], ", p =", chi_square_stat$p.value[[1]]),
footnote_as_chunk = T)
kbl(chi_square_table) %>%
kable_classic()
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c("" = 1, "Sentiment" = 3))
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3))
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0("χ2", "(", chi_square_stat$parameter[[1]], ")", " = ",
chi_square_stat$statistic[[1]], ", p =", chi_square_stat$p.value[[1]]),
footnote_as_chunk = T)
?round
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p =",
round(chi_square_stat$p.value[[1]]), 2),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
round(chi_square_stat$p.value[[1]]), 2),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
round(chi_square_stat$p.value[[1]]), 3),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
chi_square_stat$p.value[[1]]
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
round(chi_square_stat$p.value[[1]]), 4),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
signif(chi_square_stat$p.value[[1]]), 4)
signif(chi_square_stat$p.value[[1]], 4)
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
signif(chi_square_stat$p.value[[1]]), 1),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
signif(chi_square_stat$p.value[[1]]), 3),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
signif(chi_square_stat$p.value[[1]], 3)
signif(chi_square_stat$p.value[[1]], 1)
signif(chi_square_stat$p.value[[1]], 2)
signif(chi_square_stat$p.value[[1]], 1)
p_value <- signif(chi_square_stat$p.value[[1]], 1)
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
signif(chi_square_stat$p.value[[1]], 1)),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
colnames(chi_square_table)[2]
colnames(chi_square_table)[1] <- "Version"
colnames(chi_square_table)[2] <- "Positive"
colnames(chi_square_table)[3] <- "Neutral"
colnames(chi_square_table)[4] <- "Negative"
chi_square_table <- chi_square_table[, c("Version", "Negative", "Neutral", "Positive")]
kbl(chi_square_table) %>%
kable_classic() %>%
add_header_above(c(" " = 1, "Sentiment" = 3)) %>%
footnote(general = paste0(" = ",
round(chi_square_stat$statistic[[1]], 2),
", p = .",
signif(chi_square_stat$p.value[[1]], 1)),
general_title = paste0("χ2",
"(",
chi_square_stat$parameter[[1]],
")"),
footnote_as_chunk = T, title_format = "italic")
